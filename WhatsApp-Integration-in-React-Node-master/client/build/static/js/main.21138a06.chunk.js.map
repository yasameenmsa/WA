{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["QRCode","require","App","useState","loading","setLoading","phone","setPhone","msg","setMessage","qrcode","setQRCode","getQRCode","a","axios","post","res","data","value","onChange","e","target","onClick","style","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAEIA,EAASC,EAAQ,IAgCNC,EA9BH,WACV,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAA4BN,oBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KAEMC,EAAS,uCAAG,4BAAAC,EAAA,6DAChBR,GAAW,GADK,SAEES,IAAMC,KAAK,OAAQ,CAAET,QAAOE,QAF9B,OAEVQ,EAFU,OAGhBL,EAAUK,EAAIC,MACdZ,GAAW,GAJK,2CAAH,qDAOf,OACE,gDAEE,uBAAOa,MAAOZ,EAAOa,SAAU,SAACC,GAAD,OAAOb,EAASa,EAAEC,OAAOH,UAF1D,WAIE,uBAAOA,MAAOV,EAAKW,SAAU,SAACC,GAAD,OAAOX,EAAWW,EAAEC,OAAOH,UACxD,wBAAQI,QAASV,EAAjB,yBACER,GAAWM,GACX,qBAAKa,MAAO,CAAEC,OAAQ,SAAtB,SACE,cAACxB,EAAD,CAAQkB,MAAOR,MAGlBN,GAAW,4BCjBHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.21138a06.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nvar QRCode = require(\"qrcode.react\");\r\n\r\nconst App = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [msg, setMessage] = useState(\"\");\r\n  const [qrcode, setQRCode] = useState(false);\r\n\r\n  const getQRCode = async () => {\r\n    setLoading(true);\r\n    const res = await axios.post(\"/api\", { phone, msg });\r\n    setQRCode(res.data);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      Phone Number:\r\n      <input value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n      Message:\r\n      <input value={msg} onChange={(e) => setMessage(e.target.value)} />\r\n      <button onClick={getQRCode}>Get QRCode</button>\r\n      {!loading && qrcode && (\r\n        <div style={{ margin: \"100px\" }}>\r\n          <QRCode value={qrcode} />\r\n        </div>\r\n      )}\r\n      {loading && \"Waiting for QRCode...\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}